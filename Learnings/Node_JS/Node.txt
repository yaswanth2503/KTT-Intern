1.What is Node Js?
    Node.js is a JavaScript runtime environment that allows developers 
    to run JavaScript on the server. It's open-source, cross-platform, 
    and built on Chrome's V8 JavaScript engine. 

2.Key Features of Node.js
    -Asynchronous and Event-Driven
    -Single-Threaded but Highly Scalable
    -Non-Blocking I/O
    -Very Fast (Built on V8 Engine)
    -No Buffering
    -Cross-Platform
    - NPM (Node Package Manager)
    -Built-in Libraries -http, fs, path, os, url, etc.
    -Microservices & APIs

3.How Node.js works (Event-driven, Non-blocking I/O)
    1Ô∏è‚É£ Start program
    2Ô∏è‚É£ Call async function (e.g., read file)
    3Ô∏è‚É£ Node sends I/O task to thread pool (via libuv)
    4Ô∏è‚É£ Node continues running next lines (doesn‚Äôt wait)
    5Ô∏è‚É£ When I/O is done ‚ûù fires an event
    6Ô∏è‚É£ Callback is added to the event queue
    7Ô∏è‚É£ Event loop picks the callback and runs it

4.Use cases and applications of Node.js
    ‚úÖ 1. Real-Time Applications
    Used to build chat apps, live notifications, and collaboration tools with instant updates.
    ‚úÖ 2. Streaming Applications
    Perfect for media platforms like Netflix that require efficient data streaming in chunks.
    ‚úÖ 3. Single Page Applications (SPA)
    Handles dynamic content updates in apps like Gmail without reloading the page.
    ‚úÖ 4. API Development / Backend Services
    Used to create fast, scalable RESTful and GraphQL APIs for web and mobile.
    ‚úÖ 5. IoT (Internet of Things)
    Efficiently manages data from multiple connected devices in real-time.
    ‚úÖ 6. Command Line Tools
    Allows building fast and powerful CLI tools using JavaScript.
    ‚úÖ 7. Serverless Functions
    Ideal for short-lived backend tasks deployed on platforms like AWS Lambda.
    ‚úÖ 8. E-commerce & Web Portals
    Supports scalable and responsive web platforms like online stores and booking systems.

5.History and Evolution of Node.js
    Node.js was created in 2009 by Ryan Dahl to build scalable, non-blocking, event-driven 
    applications using JavaScript. In 2010, NPM was introduced, revolutionizing package
    management. Over the years, it gained massive adoption from companies like LinkedIn 
    and PayPal. A major milestone came in 2015 with the merging of Node.js and io.js under
    the Node.js Foundation. Today, it's a mature, high-performance platform widely used for
    web, API, and real-time application development.

6. What is Asynchronous Programming?
    Asynchronous programming is a programming paradigm that allows tasks to run concurrently, 
    without blocking the main thread. This is achieved by using callbacks, promises, or async/await.


7. Modules
In Node.js, a module is a reusable block of code whose functions or variables can be exported and 
used in other files.
üß© Types of Modules
Core Modules ‚Äì Built-in (e.g., fs, http, path, etc.)

Local Modules ‚Äì Your own custom modules

Third-party Modules ‚Äì Installed using npm (e.g., express, lodash)